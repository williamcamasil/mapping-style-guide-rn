// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputText snapshot action 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingRight": 50,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "height": 64,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 64,
      }
    }
    testID="input-text-action"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="16"
      bbWidth="16"
      fill="none"
      focusable={false}
      height={16}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 16,
            "width": 16,
          },
        ]
      }
      vbHeight={16}
      vbWidth={16}
      width={16}
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="m4 6 4 4 4-4"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4288980911,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="2"
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`InputText snapshot default 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#676D79",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 14,
        "fontWeight": "normal",
        "letterSpacing": -0.02,
        "lineHeight": 14,
        "marginLeft": 20,
        "marginTop": 12,
      }
    }
  >
    Help message
  </Text>
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
</View>
`;

exports[`InputText snapshot disabled 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={false}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#F7F7F8",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 0,
        "color": "#A4A7AF",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 14,
        "fontWeight": "normal",
        "letterSpacing": -0.02,
        "lineHeight": 14,
        "marginLeft": 20,
        "marginTop": 12,
      }
    }
  >
    Help message
  </Text>
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
</View>
`;

exports[`InputText snapshot empty 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 16,
        "fontWeight": "normal",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 16,
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingTop": 4,
      }
    }
    testID="rn-text-input"
    value=""
  />
</View>
`;

exports[`InputText snapshot error 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E53930",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#E53930",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 14,
        "fontWeight": "normal",
        "letterSpacing": -0.02,
        "lineHeight": 14,
        "marginLeft": 20,
        "marginTop": 12,
      }
    }
  >
    Error message
  </Text>
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
</View>
`;

exports[`InputText snapshot focused 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E53930",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#3E4149",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#E53930",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 14,
        "fontWeight": "normal",
        "letterSpacing": -0.02,
        "lineHeight": 14,
        "marginLeft": 20,
        "marginTop": 12,
      }
    }
  >
    Error message
  </Text>
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#676D79",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
</View>
`;

exports[`InputText snapshot readOnly 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    editable={false}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#676D79",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 14,
        "fontWeight": "normal",
        "letterSpacing": -0.02,
        "lineHeight": 14,
        "marginLeft": 20,
        "marginTop": 12,
      }
    }
  >
    Help message
  </Text>
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
</View>
`;

exports[`InputText snapshot secureTextEntry 1`] = `
<View>
  <TextInput
    allowFontScaling={false}
    autoCapitalize="none"
    autoComplete="off"
    autoCorrect={false}
    editable={true}
    onBlur={[Function]}
    onFocus={[Function]}
    placeholder="Input label"
    placeholderTextColor="#A4A7AF"
    secureTextEntry={true}
    spellCheck={false}
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#E1E2E4",
        "borderRadius": 12,
        "borderWidth": 1,
        "color": "#676D79",
        "fontFamily": "Averta CY",
        "fontSize": 19,
        "fontWeight": "bold",
        "height": 64,
        "letterSpacing": -0.02,
        "lineHeight": 19,
        "paddingBottom": 4,
        "paddingLeft": 20,
        "paddingRight": 50,
        "paddingTop": 32,
      }
    }
    testID="rn-text-input"
    value="Input value"
  />
  <Text
    allowFontScaling={false}
    style={
      {
        "color": "#A4A7AF",
        "flexShrink": 1,
        "fontFamily": "Averta CY",
        "fontSize": 13,
        "fontWeight": "normal",
        "left": 20,
        "letterSpacing": -0.02,
        "lineHeight": 13,
        "position": "absolute",
        "top": 12,
      }
    }
  >
    Input label
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "height": 64,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 64,
      }
    }
    testID="show-or-hidden-password-touchable"
  >
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="24"
      bbWidth="24"
      fill="none"
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="M2.13 12.297a1.097 1.097 0 0 1 0-1.04C4.234 7.37 8.118 4 12 4c3.883 0 7.767 3.37 9.87 7.259.174.323.174.715 0 1.039-2.103 3.888-5.987 7.258-9.87 7.258-3.883 0-7.767-3.37-9.87-7.26Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
        <RNSVGPath
          d="M14.357 9.42a3.333 3.333 0 1 1-4.714 4.715 3.333 3.333 0 0 1 4.714-4.714Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;
