// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputSelect snapshot Should render component as default 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": false,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 16,
          "fontWeight": "normal",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 16,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 4,
        }
      }
      testID="rn-text-input"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": false,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render component as disabled 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#F7F7F8",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 0,
          "color": "#A4A7AF",
          "fontFamily": "Averta CY",
          "fontSize": 16,
          "fontWeight": "normal",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 16,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 4,
        }
      }
      testID="rn-text-input"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render component in a form 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="Select label"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 16,
          "fontWeight": "normal",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 16,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 4,
        }
      }
      testID="rn-text-input"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render component with allowClear 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 19,
          "fontWeight": "bold",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 19,
          "paddingBottom": 4,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 32,
        }
      }
      testID="rn-text-input"
      value="My todo"
    />
    <Text
      allowFontScaling={false}
      style={
        {
          "color": "#A4A7AF",
          "flexShrink": 1,
          "fontFamily": "Averta CY",
          "fontSize": 13,
          "fontWeight": "normal",
          "left": 20,
          "letterSpacing": -0.02,
          "lineHeight": 13,
          "position": "absolute",
          "top": 12,
        }
      }
    >
      label de testes
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-action-clear"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 4 8 8m0-8-8 8"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render component with error 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E53930",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 16,
          "fontWeight": "normal",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 16,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 4,
        }
      }
      testID="rn-text-input"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render component with value 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 19,
          "fontWeight": "bold",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 19,
          "paddingBottom": 4,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 32,
        }
      }
      testID="rn-text-input"
      value="My todo"
    />
    <Text
      allowFontScaling={false}
      style={
        {
          "color": "#A4A7AF",
          "flexShrink": 1,
          "fontFamily": "Averta CY",
          "fontSize": 13,
          "fontWeight": "normal",
          "left": 20,
          "letterSpacing": -0.02,
          "lineHeight": 13,
          "position": "absolute",
          "top": 12,
        }
      }
    >
      label de testes
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;

exports[`InputSelect snapshot Should render the help text 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "opacity": 1,
    }
  }
  testID="input-select-button"
>
  <View>
    <TextInput
      allowFontScaling={false}
      editable={false}
      onBlur={[Function]}
      onFocus={[Function]}
      placeholder="label de testes"
      placeholderTextColor="#A4A7AF"
      pointerEvents="none"
      secureTextEntry={false}
      style={
        {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#E1E2E4",
          "borderRadius": 12,
          "borderWidth": 1,
          "color": "#676D79",
          "fontFamily": "Averta CY",
          "fontSize": 16,
          "fontWeight": "normal",
          "height": 64,
          "letterSpacing": -0.02,
          "lineHeight": 16,
          "paddingBottom": 0,
          "paddingLeft": 20,
          "paddingRight": 50,
          "paddingTop": 4,
        }
      }
      testID="rn-text-input"
      value=""
    />
    <Text
      allowFontScaling={false}
      style={
        {
          "color": "#676D79",
          "flexShrink": 1,
          "fontFamily": "Averta CY",
          "fontSize": 14,
          "fontWeight": "normal",
          "letterSpacing": -0.02,
          "lineHeight": 14,
          "marginLeft": 20,
          "marginTop": 12,
        }
      }
    >
      Help message
    </Text>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "height": 64,
          "justifyContent": "center",
          "opacity": 1,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 64,
        }
      }
      testID="input-text-select-icon-down"
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="16"
        bbWidth="16"
        fill="none"
        focusable={false}
        height={16}
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "flex": 0,
              "height": 16,
              "width": 16,
            },
          ]
        }
        vbHeight={16}
        vbWidth={16}
        width={16}
      >
        <RNSVGGroup
          fill={null}
          propList={
            [
              "fill",
            ]
          }
        >
          <RNSVGPath
            d="m4 6 4 4 4-4"
            fill={
              {
                "payload": 4278190080,
                "type": 0,
              }
            }
            propList={
              [
                "stroke",
                "strokeWidth",
                "strokeLinecap",
                "strokeLinejoin",
              ]
            }
            stroke={
              {
                "payload": 4290954697,
                "type": 0,
              }
            }
            strokeLinecap={1}
            strokeLinejoin={1}
            strokeWidth="2"
          />
        </RNSVGGroup>
      </RNSVGSvgView>
    </View>
  </View>
</View>
`;
