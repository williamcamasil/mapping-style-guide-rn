// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputPassword InputPassword snapshot 1`] = `
<View
  style={
    {
      "justifyContent": "center",
    }
  }
>
  <TextInput
    caretHidden={true}
    keyboardType="numeric"
    onBlur={[Function]}
    onFocus={[Function]}
    secureTextEntry={true}
    selection={
      {
        "end": 0,
        "start": 0,
      }
    }
    style={
      {
        "borderColor": "#FFFFFF",
        "borderRadius": 12,
        "borderWidth": 1,
        "height": 64,
        "opacity": 0,
      }
    }
    testID="rn-text-input"
    value=""
  />
  <View
    pointerEvents="box-none"
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "left": 0,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        {
          "flex": 0,
          "flexDirection": "row",
          "justifyContent": "flex-start",
          "width": 200,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-0"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-1"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-2"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-3"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-4"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-5"
        />
      </View>
    </View>
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="24"
      bbWidth="24"
      fill="none"
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      onPress={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      responsible={true}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "marginLeft": 24,
          },
          {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      testID="btn-icon-show-password"
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="M2.13 12.297a1.097 1.097 0 0 1 0-1.04C4.234 7.37 8.118 4 12 4c3.883 0 7.767 3.37 9.87 7.259.174.323.174.715 0 1.039-2.103 3.888-5.987 7.258-9.87 7.258-3.883 0-7.767-3.37-9.87-7.26Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
        <RNSVGPath
          d="M14.357 9.42a3.333 3.333 0 1 1-4.714 4.715 3.333 3.333 0 0 1 4.714-4.714Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;

exports[`InputPassword should change text focused with visible password 1`] = `[Function]`;

exports[`InputPassword should change text focused with visible password and blur 1`] = `[Function]`;

exports[`InputPassword should change text with visible password 1`] = `[Function]`;

exports[`InputPassword should on click to show password 1`] = `[Function]`;

exports[`InputPassword should onClick on inputPassword circle 1`] = `[Function]`;

exports[`InputPassword should onFocus on inputPassword 1`] = `[Function]`;

exports[`InputPassword should render InputPassword with the property stretch 1`] = `
<View
  style={
    {
      "justifyContent": "center",
    }
  }
>
  <TextInput
    caretHidden={true}
    keyboardType="numeric"
    onBlur={[Function]}
    onFocus={[Function]}
    secureTextEntry={true}
    selection={
      {
        "end": 0,
        "start": 0,
      }
    }
    style={
      {
        "borderColor": "#FFFFFF",
        "borderRadius": 12,
        "borderWidth": 1,
        "height": 64,
        "opacity": 0,
      }
    }
    testID="rn-text-input"
    value=""
  />
  <View
    pointerEvents="box-none"
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
        "left": 0,
        "position": "absolute",
        "right": 0,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        {
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "width": undefined,
        }
      }
    >
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-0"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-1"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-2"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-3"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-4"
        />
        <Text
          style={
            {
              "height": 16,
              "width": 16,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          {
            "flexDirection": "row",
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#C2C5C9",
              "borderRadius": 10,
              "borderWidth": 1,
              "height": 20,
              "width": 20,
            }
          }
          testID="circle-touchable-5"
        />
      </View>
    </View>
    <RNSVGSvgView
      align="xMidYMid"
      bbHeight="24"
      bbWidth="24"
      fill="none"
      focusable={false}
      height={24}
      meetOrSlice={0}
      minX={0}
      minY={0}
      onPress={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      responsible={true}
      style={
        [
          {
            "backgroundColor": "transparent",
            "borderWidth": 0,
          },
          {
            "marginLeft": 24,
          },
          {
            "flex": 0,
            "height": 24,
            "width": 24,
          },
        ]
      }
      testID="btn-icon-show-password"
      vbHeight={24}
      vbWidth={24}
      width={24}
    >
      <RNSVGGroup
        fill={null}
        propList={
          [
            "fill",
          ]
        }
      >
        <RNSVGPath
          d="M2.13 12.297a1.097 1.097 0 0 1 0-1.04C4.234 7.37 8.118 4 12 4c3.883 0 7.767 3.37 9.87 7.259.174.323.174.715 0 1.039-2.103 3.888-5.987 7.258-9.87 7.258-3.883 0-7.767-3.37-9.87-7.26Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
        <RNSVGPath
          d="M14.357 9.42a3.333 3.333 0 1 1-4.714 4.715 3.333 3.333 0 0 1 4.714-4.714Z"
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
          propList={
            [
              "stroke",
              "strokeWidth",
              "strokeLinecap",
              "strokeLinejoin",
            ]
          }
          stroke={
            {
              "payload": 4290954697,
              "type": 0,
            }
          }
          strokeLinecap={1}
          strokeLinejoin={1}
          strokeWidth="1.8"
        />
      </RNSVGGroup>
    </RNSVGSvgView>
  </View>
</View>
`;
